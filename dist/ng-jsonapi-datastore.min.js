!function(){function t(t,i){this.id=i,this._type=t,this._attributes=[],this._relationships=[]}function i(){this.graph={}}angular.module("beauby.jsonApiDataStore",[]).factory("JsonApiDataStore",function(){return{store:new i,Model:t}}),t.prototype.serialize=function(t){var i=this,r={data:{type:this._type}};return t=t||{},t.attributes=t.attributes||this._attributes,t.relationships=t.relationships||this._relationships,void 0!==this.id&&(r.data.id=this.id),0!==t.attributes.length&&(r.data.attributes={}),0!==t.relationships.length&&(r.data.relationships={}),t.attributes.forEach(function(t){r.data.attributes[t]=i[t]}),t.relationships.forEach(function(t){function a(t){return{type:t._type,id:t.id}}i[t].constructor===Array?r.data.relationships[t]={data:i[t].map(a)}:r.data.relationships[t]={data:a(i[t])}}),r},t.prototype.setAttribute=function(t,i){void 0===this[t]&&this._attributes.push(t),this[t]=i},t.prototype.setRelationship=function(t,i){void 0===this[t]&&this._relationships.push(t),this[t]=i},i.prototype.destroy=function(t){delete this.graph[t._type][t.id]},i.prototype.find=function(t,i){return this.graph[t]&&this.graph[t][i]?this.graph[t][i]:null},i.prototype.findAll=function(t){var i=this;return this.graph[t]?Object.keys(i.graph[t]).map(function(r){return i.graph[t][r]}):[]},i.prototype.reset=function(){this.graph={}},i.prototype.initModel=function(i,r){return this.graph[i]=this.graph[i]||{},this.graph[i][r]=this.graph[i][r]||new t(i,r),this.graph[i][r]},i.prototype.syncRecord=function(t){function i(t){if(!a.find(t.type,t.id)){var i=a.initModel(t.type,t.id);i._placeHolder=!0}return a.graph[t.type][t.id]}var r,a=this,e=this.initModel(t.type,t.id);delete e._placeHolder;for(r in t.attributes)e._attributes.push(r),e[r]=t.attributes[r];if(t.relationships)for(r in t.relationships){var n=t.relationships[r];void 0!==n.data&&(e._relationships.push(r),null===n.data?e[r]=null:n.data.constructor===Array?e[r]=n.data.map(i):e[r]=i(n.data)),n.links&&console.log("Warning: Links not implemented yet.")}return e},i.prototype.sync=function(t){var i=t.data,r=this.syncRecord.bind(this);return i?(t.included&&t.included.map(r),i.constructor===Array?i.map(r):r(i)):[]}}();